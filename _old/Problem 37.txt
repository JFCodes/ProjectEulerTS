Module Module1

    Sub Main()

        Dim endTime As Double
        Dim starTime As Double = Timer
        Dim answer As Long = 0


        Dim limit As Long = 1000000
        Dim primeVector(limit) As Boolean
        PrimeVectorSieveGenerator(primeVector, limit)

        Dim primeString As String = ""
        Dim leftToRight As String = ""
        Dim ritghToLeft As String = ""
        Dim counter As Integer = 0
        Dim increment As Integer = 10

        While counter < 11
            increment += 1

            If primeVector(increment) Then
                primeString = CStr(increment)
                leftToRight = primeString.Substring(1, primeString.Length - 1)
                ritghToLeft = primeString.Substring(0, primeString.Length - 1)

                Do While leftToRight <> ""
                    If primeVector(CInt(leftToRight)) = False Then
                        Continue While
                    End If
                    leftToRight = leftToRight.Substring(1, leftToRight.Length - 1)
                Loop

                Do While ritghToLeft <> ""
                    If primeVector(CInt(ritghToLeft)) = False Then
                        Continue While
                    End If
                    ritghToLeft = ritghToLeft.Substring(0, ritghToLeft.Length - 1)
                Loop

                counter += 1
                answer += increment
            End If
        End While
        
       
        endTime = Timer
        Console.WriteLine("Answer: " & answer)
        Console.WriteLine("Excution time: " & endTime - starTime)
        Console.ReadKey()

    End Sub
    Sub PrimeVectorSieveGenerator(ByRef vector() As Boolean, limit As Integer)

        ReDim vector(limit)

        For i = 2 To limit
            vector(i) = True
        Next
        For i = 2 To limit
            For j = 2 * i To limit Step i
                vector(j) = False
            Next
        Next

    End Sub
End Module











using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Diagnostics;


namespace ConsoleApplication3
{
    class Program
    {
        static void Main(string[] args)
        {

            int answer = 0;
            Stopwatch timer = new Stopwatch();
            timer.Start();

            int limit = 1000000;
            bool[] primeVector = PrimeVectorSieveGenerator(limit);

            string primeString, leftToRight, rightToLeft;
            int counter = 0, increment = 10;

            while (counter < 11){
                increment++;

                if (primeVector[increment]){

                    primeString = Convert.ToString(increment);
                    leftToRight = primeString.Substring(1, primeString.Length - 1);
                    rightToLeft = primeString.Substring(0, primeString.Length - 1);

                    while (leftToRight != ""){
                        if (!primeVector[Convert.ToInt32(leftToRight)]){
                            goto nextWhile;
                        }
                        leftToRight = leftToRight.Substring(1, leftToRight.Length - 1);
                    }

                    while (rightToLeft != ""){
                        if (!primeVector[Convert.ToInt32(rightToLeft)])
                        {
                            goto nextWhile;
                        }
                        rightToLeft = rightToLeft.Substring(0, rightToLeft.Length - 1);
                    }
                    counter++;
                    answer += increment;
                }

                nextWhile:;
            }

            timer.Stop();
            Console.WriteLine("Answer: {0}", answer);
            Console.WriteLine("Processing time: {0}", timer.Elapsed);
            Console.ReadKey();
        }

        public static Boolean[] PrimeVectorSieveGenerator(int limit)
        {

            bool[] primeVector = new bool[limit + 1];

            for (int i = 2; i <= limit; i++)
            {
                primeVector[i] = true;
            }
            for (int i = 2; i <= limit; i++)
            {
                for (int j = 2 * i; j <= limit; j += i)
                {
                    primeVector[j] = false;
                }
            }

            return primeVector;
        }
    }
}