Module Module1

    Sub Main()
        Dim endTime As Double
        Dim starTime As Double = Timer
        Dim resposta As Integer = 0

        Dim Number As String = "2"

        For i = 2 To 1000
            Number = SumofBigNumbers(Number, Number)
        Next

        For i = 0 To Number.Length - 1
            resposta += CInt(Number(i).ToString)
        Next

        endTime = Timer
        Console.WriteLine("Resposta: " & resposta)
        Console.WriteLine("Excution time: " & endTime - starTime)
        Console.ReadKey()
    End Sub

    Function SumofBigNumbers(number1 As String, number2 As String) As String
        SumofBigNumbers = ""
        Dim resultado() As Integer
        Dim somavertical As Integer
        Dim subresultado As Integer
        Dim passagem As Integer = 0

        Dim dimension As Integer = Math.Max(number1.Length - 1, number2.Length - 1)
        Dim sumArray(1, dimension) As Integer

        For i = 0 To number1.Length - 1
            sumArray(0, i) = CInt(number1(number1.Count - 1 - i).ToString)
        Next
        For i = 0 To number2.Length - 1
            sumArray(1, i) = CInt(number2(number2.Count - 1 - i).ToString)
        Next

        For i = 0 To dimension
            somavertical = sumArray(0, i) + sumArray(1, i)
            somavertical += passagem
            subresultado = somavertical Mod 10
            passagem = (somavertical - subresultado) / 10

            ReDim Preserve resultado(i)
            resultado(i) = subresultado
        Next

        If passagem = 1 Then
            ReDim Preserve resultado(dimension + 1)
            resultado(dimension + 1) = 1
        End If

        For i = 0 To resultado.Length - 1
            SumofBigNumbers &= resultado(resultado.Count - 1 - i).ToString
        Next

        Return SumofBigNumbers
    End Function

End Module





using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Diagnostics;


namespace ConsoleApplication3
{
    class Program
    {
        static void Main(string[] args){

            long answer = 0;
            Stopwatch timer = new Stopwatch();
            timer.Start();

            string number = "2";

            for (int i = 2; i <= 1000; i++){
                number = SumofBigNumbers(number, number);
            }

            for (int i = 0; i < number.Length; i++){
                answer += (int)char.GetNumericValue(number[i]);
            }

                timer.Stop();
            Console.WriteLine("Answer: {0}", answer);
            Console.WriteLine("Processing time: {0}", timer.Elapsed);
            Console.ReadKey();
        }

        public static string SumofBigNumbers(string number1, string number2)
        {

            string result = "";
            int maxLength = Math.Max(number1.Length, number2.Length);
            short char1, char2;
            short transporter = 0;
            int subSum;

            for (int i = 1; i <= maxLength; i++)
            {

                if (i <= number1.Length)
                {
                    char1 = (short)Char.GetNumericValue(number1[number1.Length - i]);
                }
                else
                {
                    char1 = 0;
                }

                if (i <= number2.Length)
                {
                    char2 = (short)Char.GetNumericValue(number2[number2.Length - i]);
                }
                else
                {
                    char2 = 0;
                }

                subSum = char1 + char2 + transporter;
                result = Convert.ToString(subSum % 10) + result;
                transporter = Convert.ToInt16(subSum / 10);
            }

            if (transporter > 0)
            {
                result = Convert.ToString(transporter) + result;
            }

            return result;
        }
    }
}
