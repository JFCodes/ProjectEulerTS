Module Module1
    'A code that before optimization used to run for many minutes... added numberOfDivisors optimization: run time droped to 0.500

    Sub Main()
        Dim endTime As Double
        Dim starTime As Double = Timer
        Dim resposta As Long = 0

        Dim seedTrian As Integer = 1

        Do While numberOfDivisors(resposta) <= 500
            seedTrian += 1
            resposta = (seedTrian * (seedTrian - 1)) / 2
        Loop

        endTime = Timer
        Console.WriteLine("Resposta: " & resposta)
        Console.WriteLine("Excution time: " & endTime - starTime)
        Console.ReadKey()
    End Sub

    Public Function numberOfDivisors(ByVal number As Long) As Integer

        Dim limit As Integer = Math.Ceiling(Math.Sqrt(number))
        Dim vector(limit) As Integer
        Dim remainder As Long = number
        Dim semiRemainder As Integer = 0

        Do While remainder > 1

            semiRemainder = remainder
            For i = 2 To limit
                If remainder Mod i = 0 Then
                    vector(i) += 1
                    remainder = remainder / i
                    Exit For
                End If
            Next
            If remainder = semiRemainder Then
                remainder = 1
                vector(0) = 1
            End If
        Loop


        For i = 0 To limit
            If vector(i) > 0 Then
                remainder *= (vector(i) + 1)
            End If
        Next

        Return remainder
    End Function
End Module











using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Diagnostics;


namespace ConsoleApplication3
{
    class Program
    {
        static void Main(string[] args){

            long answer = 0;
            Stopwatch timer = new Stopwatch();
            timer.Start();

            int seedTrian = 1;

            while(numberOfDivisors(answer) <= 500){
                seedTrian++;
                answer = (seedTrian * (seedTrian - 1)) / 2;
            }

            timer.Stop();
            Console.WriteLine("Answer: {0}", answer);
            Console.WriteLine("Processing time: {0}", timer.Elapsed);
            Console.ReadKey();
        }

        public static int numberOfDivisors(long number){
            
            int limit = Convert.ToInt32(Math.Ceiling(Math.Sqrt(number)));
            short[] vector = new short[limit + 1];
            long remainder = number;
            long semiRemainder = 0;

            while (remainder > 1){

                semiRemainder = remainder;

                for (int i = 2; i <= limit; i++){
                    if (remainder % i == 0){
                        vector[i]++;
                        remainder = remainder/i;
                        break;
                    }
                }

                if (remainder == semiRemainder){
                    remainder = 1;
                    vector[0] = 1;
                }
            }

            for (int i = 0; i <= limit; i++){
                if (vector[i] > 0){
                    remainder *= (vector[i] + 1);        
                }
            }
            return Convert.ToInt32(remainder);
        }
    }
}
