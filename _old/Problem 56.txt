Module Module1

    Sub Main()
        Dim endTime As Double
        Dim starTime As Double = Timer
        Dim resposta As Integer = 0

        Dim a As Integer = 12
        Dim b As Integer = 6

        Dim number As String
        Dim parcial As String
        Dim sumDigits As Long = 0
        number = "0"

        For a = 90 To 100
                parcial = a.ToString
                For i = 2 To 100
                    number = "0"
                    For j = 1 To a
                        number = SumofBigNumbers(number, parcial)
                    Next
                    parcial = number
                    sumDigits = digitalSum(number)
                    If sumDigits > resposta Then resposta = sumDigits
                Next
        Next

        endTime = Timer
        Console.WriteLine("Resposta: " & resposta)
        Console.WriteLine("Excution time: " & endTime - starTime)
        Console.ReadKey()
    End Sub

    Function digitalSum(number As String) As Long

        For Each c As Char In number
            digitalSum += CInt(c.ToString)
        Next

        Return digitalSum
    End Function
    Function SumofBigNumbers(number1 As String, number2 As String) As String
        SumofBigNumbers = ""

        'Correction of size: number1 lenght as to be equal or greater then number2 lentgh
        Dim save1 As String = number1
        Dim save2 As String = number2

        If save2.Length > save1.Length Then
            number1 = save2
            number2 = save1
        End If

        Dim dimension As Integer = Math.Max(number1.Length - 1, number2.Length - 1)

        If number1.Length - 1 < dimension Then
            For i = number1.Length - 1 To dimension
                number1 = "0" & number1
            Next
        End If

        If number2.Length - 1 < dimension Then
            For i = number2.Length - 1 To dimension - 1
                number2 = "0" & number2
            Next
        End If

        Dim numbersArray(1, dimension) As Integer

        For i = 0 To dimension
            numbersArray(0, i) = CInt(number1(i).ToString)
            numbersArray(1, i) = CInt(number2(i).ToString)
        Next

        Dim resultado() As Integer

        Dim somavertical As Integer
        Dim subresultado As Integer
        Dim passagem As Integer = 0

        For i = 0 To dimension
            somavertical = numbersArray(0, dimension - i) + numbersArray(1, dimension - i)

            somavertical += passagem
            subresultado = (somavertical) Mod 10
            passagem = (somavertical - subresultado) / 10

            ReDim Preserve resultado(i)
            resultado(i) = subresultado
        Next

        If passagem > 0 Then
            For i = 0 To passagem.ToString.Length - 1
                ReDim Preserve resultado(dimension + 1 + i)

                resultado(dimension + 1 + i) = (passagem Mod (10 ^ (i + 1))) / (10 ^ (i))
                passagem = passagem - resultado(dimension + 1 + i)

            Next
        End If

        For i = 0 To resultado.Length - 1
            SumofBigNumbers &= resultado(resultado.Count - 1 - i).ToString
        Next

        Return SumofBigNumbers
    End Function
End Module