Module Module1

    Sub Main()


        Dim endTime As Double
        Dim starTime As Double = Timer
        Dim answer As Integer = 0

        Dim perimeters(1000) As Integer
        Dim cSide As Double
        Dim maxSolutions As Short = 0

        For aSide = 1 To 500
            For bSide = 1 To 500

                cSide = Math.Sqrt(aSide * aSide + bSide * bSide)

                If cSide Mod 1 = 0 Then
                    If aSide + bSide + cSide <= 1000 Then
                        perimeters(aSide + bSide + cSide) += 1
                    End If
                End If
            Next
        Next

        For i = 1 To 1000
            If perimeters(i) > maxSolutions Then
                answer = i
                maxSolutions = perimeters(i)
            End If
        Next

        endTime = Timer
        Console.WriteLine("Answer: " & answer)
        Console.WriteLine("Excution time: " & endTime - starTime)
        Console.ReadKey()


    End Sub
End Module










using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Diagnostics;


namespace ConsoleApplication3
{
    class Program
    {
        static void Main(string[] args)
        {

            int answer = 0;
            Stopwatch timer = new Stopwatch();
            timer.Start();

            int[] perimeters = new int[1001];
            double cSide;
            int maxSolutions = 0;

            for (int aSide = 1; aSide <= 500; aSide++){
                for (int bSide = 1; bSide <= 500; bSide++){

                    cSide = Math.Sqrt(aSide * aSide + bSide * bSide);
                    if (cSide % 1 == 0) {
                        if (aSide + bSide + cSide <= 1000){
                            perimeters[aSide + bSide + Convert.ToInt32(cSide)]++;
                        }
                    }
                }
            }

            for (int i = 1; i <= 1000; i++){
                if (perimeters[i] > maxSolutions){
                    answer = i;
                    maxSolutions = perimeters[i];
                }
            }

                timer.Stop();
            Console.WriteLine("Answer: {0}", answer);
            Console.WriteLine("Processing time: {0}", timer.Elapsed);
            Console.ReadKey();
        }
    }
}